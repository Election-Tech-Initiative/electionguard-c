name: Build

on:
   milestone:
     types: [closed]

jobs:
  linux_build:
    name: 'Linux Build'
    runs-on: 'ubuntu-latest'
    steps:
    - uses: actions/checkout@master
      with:
        submodules: true
    - name: Upgrade cmake
      run: | 
        sudo mv /usr/local/bin/cmake /usr/local/bin/cmake-old
        sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 8611B7A28669BB93
        sudo apt-add-repository 'deb https://apt.kitware.com/ubuntu/ xenial main'
        sudo apt-get update && sudo apt-get install -y cmake
        cmake --version
    - name: Build C Library
      run: |
        cmake --version
        cmake -S . -B build -DBUILD_SHARED_LIBS=ON
        cmake --build build
    - name: Upload Shared Library
      uses: actions/upload-artifact@v1
      with:
        name: libelectionguard.so
        path: build/libelectionguard.so
  windows_build:
    name: 'Windows Build'
    runs-on: 'windows-latest'
    steps:
    - uses: actions/checkout@master
      with:
        submodules: true
    - name: Install msys
      run: |
        $msyspath="msys64"
        choco install msys2 --params="/InstallDir:$msyspath /NoPath" -y
        echo "::add-path::$msyspath\usr\bin"
        echo "::add-path::$msyspath"
        echo "::add-path::$msyspath\mingw64\bin"
        echo "::add-path::$msyspath\mingw64\lib"
        echo "::add-path::$msyspath\mingw64\include"
    - name: Install gcc and gmp
      run: |
        pacman --noconfirm -Syu
        pacman --noconfirm -S mingw-w64-x86_64-gcc mingw-w64-x86_64-gmp
    - name: Build C Library
      run: |
        cmake --version
        cmake -S . -B build -G "MSYS Makefiles" -DBUILD_SHARED_LIBS=ON
        cmake --build build
    - name: Upload Shared Library
      uses: actions/upload-artifact@v1
      with:
        name: electionguard.dll
        path: build/electionguard.dll
  macos_build:
    name: 'MacOS Build'
    runs-on: 'macOS-latest'
    steps:
    - uses: actions/checkout@master
      with:
        submodules: true
    - name: Install gmp
      run: |
        brew install gmp
        echo "::add-path::/usr/local/lib"
        echo "::add-path::/usr/local/include"
    - name: Build C Library
      run: |
        cmake --version
        cmake -S . -B build -DBUILD_SHARED_LIBS=ON
        cmake --build build
    - name: Upload Shared Library
      uses: actions/upload-artifact@v1
      with:
        name: libelectionguard.dylib
        path: build/libelectionguard.dylib
  release:
    name: Upload Release
    needs: [linux_build, windows_build, macos_build]
    runs-on: ubuntu-latest
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          release_name: Milestone Release
          tag_name: v1.0.0
          draft: true
          prerelease: false
      - name: Get Linux Artifact
        uses: actions/download-artifact@master
        with:
          name: libelectionguard.so
      - name: Get Windows Artifact
        uses: actions/download-artifact@master
        with:
          name: electionguard.dll
      - name: Get MacOS Artifact
        uses: actions/download-artifact@master
        with:
          name: libelectionguard.dylib
      - name: Zip Artifacts
        run: |
          zip -r electionguard.zip .
      - name: Display Artifacts
        run: ls
      - name: Upload Linux Artifact
        id: upload-release-asset_1
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./electionguard.zip
          asset_name: electionguard.zip
          asset_content_type: application/zip
  